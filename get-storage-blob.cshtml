<!-- The policy defined in this file provides an example of how to authenticate using Managed Identity to access Storage Account and read a blob. -->
<!-- Parameters: blobtoread - Name of the Blob you want to read contents from. -->
<!-- Steps required -->
<!-- 1. Enable System-Assigned Identity on API Management instance.  -->
<!-- 2. Assign API Management instance principalId as Storage Blob Data Contributor Role in the Azure Storage Account -->
<!-- 3. You can optionally restrict Storage Account to be accessible only by Trusted services in Firewalls/VirtualNetwork in the Storage Account. -->
<!-- OR -->
<!-- Create a User Managed Identity and assign the client-id as Storage Blob Data Contributor Role in the Azure Storage Account and use the client-id attribute as shown below. -->
<policies>
    <inbound>
        <base />
        <set-method>GET</set-method>
        <set-backend-service base-url="https://{{storage-account-name}}.blob.core.windows.net/" />
        <rewrite-uri template="@(context.Request.MatchedParameters["blobtoread"])" copy-unmatched-params="true" />
        <set-header name="x-ms-version" exists-action="override">
            <value>2019-07-07</value>
        </set-header>
        <authentication-managed-identity resource="https://{{storage-account-name}}.blob.core.windows.net/" client-id="{{managed-identity-client-id}}" />
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>